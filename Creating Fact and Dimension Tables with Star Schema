import psycopg2

## can use as connection template
try: 
    conn = psycopg2.connect("host=127.0.0.1 dbname=studentdb user=student password=student")
except psycopg2.Error as e: 
    print("Error: Could not make connection to the Postgres database")
    print(e)
 try: 
    cur = conn.cursor()
except psycopg2.Error as e: 
    print("Error: Could not get cursor to the Database")
    print(e)
    
    conn.set_session(autocommit=True)
    
    try: 
    cur.execute("CREATE TABLE IF NOT EXISTS customer_transactions (customer_id int, store_id int, spent float)")
except psycopg2.Error as e: 
    print("Error: Issue creating table")
    print (e)
    
#Insert into all tables 
try: 
    cur.execute("INSERT INTO customer_transactions (customer_id, store_id, spent) \
                    VALUES(%s, %s, %s)", \
                       (1,1,20.50))
except psycopg2.Error as e: 
    print("Error: Inserting Rows")
    print (e)
try: 
    cur.execute("INSERT INTO customer_transactions (customer_id, store_id, spent) \
                    VALUES(%s, %s, %s)", \
                       (2,1,35.21))
except psycopg2.Error as e: 
    print("Error: Inserting Rows")
    print (e)

try: 
    cur.execute("CREATE TABLE IF NOT EXISTS customer (customer_id int, name varchar, rewards boolean);")
except psycopg2.Error as e: 
    print("Error: Issue creating table")
    print (e)
    
try: 
   cur.execute("INSERT INTO customer (customer_id, name, rewards) \
                    VALUES(%s, %s, %s)", \
                       (1,'Amanda',True))
except psycopg2.Error as e: 
    print("Error: Inserting Rows")
    print (e)
    
try: 
   cur.execute("INSERT INTO customer (customer_id, name, rewards) \
                    VALUES(%s, %s, %s)", \
                       (2,'Toby',False))
except psycopg2.Error as e: 
    print("Error: Inserting Rows")
    print (e)
    
try: 
    cur.execute("CREATE TABLE IF NOT EXISTS items_purchased (customer_id int, item_number int, item_name varchar)")
except psycopg2.Error as e: 
    print("Error: Issue creating table")
    print (e)
    
#Insert into all tables 
try: 
    cur.execute("INSERT INTO items_purchased (customer_id , item_number , item_name ) \
                    VALUES(%s, %s, %s)", \
                       (1,1,'Rubber Soul'))
except psycopg2.Error as e: 
    print("Error: Inserting Rows")
    print (e)
try: 
    cur.execute("INSERT INTO items_purchased (customer_id , item_number , item_name ) \
                    VALUES(%s, %s, %s)", \
                       (2,3,'Let It Be'))
except psycopg2.Error as e: 
    print("Error: Inserting Rows")
    print (e)

    
try: 
    cur.execute("CREATE TABLE IF NOT EXISTS store (store_id int, state varchar)")
except psycopg2.Error as e: 
    print("Error: Issue creating table")
    print (e)
    
try: 
    cur.execute("INSERT INTO store (store_id, state)\
                    VALUES (%s,%s)",\
                    (1,'CA'))
except psycopg2.Error as e: 
    print("Error: Inserting Rows")
    print (e)

try: 
    cur.execute("INSERT INTO store (store_id, state)\
                    VALUES (%s,%s)",\
                    (2,'WA'))
except psycopg2.Error as e: 
    print("Error: Inserting Rows")
    print (e)

try: 
    cur.execute("SELECT DISTINCT C.NAME, S.STORE_ID, S.STATE, IP.ITEM_NAME, C.REWARDS FROM (CUSTOMER_TRANSACTIONS CT \
                                                                        JOIN STORE S ON CT.STORE_ID = S.STORE_ID \
                                                                        JOIN CUSTOMER C ON CT.CUSTOMER_ID = C.CUSTOMER_ID\
                                                                        JOIN ITEMS_PURCHASED IP ON CT.CUSTOMER_ID = IP.CUSTOMER_ID)\
                                                                        WHERE CT.SPENT > 30;")
    
    
except psycopg2.Error as e: 
    print("Error: select *")
    print (e)

row = cur.fetchone()
while row:
   print(row)
   row = cur.fetchone()


try: 
    cur.execute("SELECT customer_id, spent FROM customer_transactions WHERE customer_id = 2;")
    
    
except psycopg2.Error as e: 
    print("Error: select *")
    print (e)

row = cur.fetchone()
while row:
   print(row)
   row = cur.fetchone()
   
   
   try: 
    cur.execute("DROP TABLE CUSTOMER_TRANSACTIONS")
    
except psycopg2.Error as e: 
    print("Error: Dropping table")
    print (e)
    
try: 
    cur.execute("DROP TABLE STORE")
    
except psycopg2.Error as e: 
    print("Error: Dropping table")
    print (e)
    
try: 
    cur.execute("DROP TABLE CUSTOMER")
    
except psycopg2.Error as e: 
    print("Error: Dropping table")
    print (e)
    
try: 
    cur.execute("DROP TABLE ITEMS_PURCHASED")
    
except psycopg2.Error as e: 
    print("Error: Dropping table")
    print (e)
    
    cur.close()
conn.close()
